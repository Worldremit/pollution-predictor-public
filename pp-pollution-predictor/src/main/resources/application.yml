server.port: 30200

app:

  matcher:
    predictionTime: 1d
    joinWindow: 365d

  training:
    from: 2013-03-08
    to: 2015-03-08

  cluster:
    searcher:
      number-projections: 2
      search-size: 10
    kmeans:
      beta: 1.1 # 1.3
      cluster-log-factor: 1.5 # 10.0
      cluster-overshoot: 1.5 # 2.0
    init:
      clusters-estimated: 10
      distance-cutoff: 0.01 # 10.0

  norms:
    PM25: { medium: 12.0, high: 35.5 }    # [ppb/24h] # WIOS: 20/y
    PM10: { medium: 55.0, high: 155.0 }   # [ppb/24h] # WIOS: 50/d, 40/y, 100/d (info), 150/d (alarm)
    NO2: { medium: 53.0, high: 100.0 }    # [ppb/1h]  # WIOS: 40/y, 200/h, 400/h (alarm)
    CO: { medium: 4500.0, high: 9500.0 }  # [ppb/8h]  # WIOS: 10k/8h
    SO2: { medium: 35.0, high: 75.0 }     # [ppb/1h]  # WIOS: 20/y, 125/d, 350/h, 500/10min, 500/h (alarm)
    O3: { medium: 55.0, high: 70.0 }      # [ppb/8h]  # WIOS: 120/8h, 180/h (info), 240/h (alarm)
    # TODO: find one
    "NO": { medium: 50.0, high: 100.0}
    NOX: { medium: 50.0, high: 100.0}   # China: 50 ppb/y, 100 ppb/24h, 250 ppb/1h
    BZN: { medium: 50.0, high: 100.0}

  features:
    filter:
      weather: [ "TEMPERATURE", "VISIBILITY", "PRESSURE" ]
      pollution: [ "PM25", "PM10", "NO2", "CO", "NOX" ]
      oneHot: [ ]
    filterNot:
      weather: [ "WIND_SPEED", "HUMIDITY", "CLOUD_COVER", "RAIN_INTENSITY", "SNOW_INTENSITY" ]
      pollution: [ "BZN", "NO", "NOX" ]
      oneHot: [ "SEASON", "DAY_NIGHT", "WIND_DIRECTION" ]

settings:
  schema-registry: http://localhost:8081
  kafka-brokers: localhost:9092

topics:
  measurements-normalized: measurements-normalized
  predictions: predictions
  forecasts: forecasts
  predictions-vs-actuals: predictions-vs-actuals
  confusions: confusions
  accuracies: accuracies
  global-stats: global-stats
  delay-model-stats: delay-model-stats
  models: models

toggles:
  matcher: true
  confusion: true
  clusterer: true
  predictor: true
  delayModelStats: true
  accuracy: true
  forecaster: true

logging.level:
  com.worldremit.measurement.NormalizerTopology: info
  com.worldremit.predictor.PredictorTopology: info
  com.worldremit.confusion.ConfusionMatrixTopology: info
  com.worldremit.cluster.ClustererTopology: info
  com.worldremit.predictor.PredictorTransformer: info

spring:
  application.name: pollution-predictor
  profiles.active: local

  kafka:
    properties:
      schema.registry.url: ${settings.schema-registry}
    producer:
      key-serializer: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerializer
      value-serializer: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerializer

spring.cloud.stream:

  function.definition: >
    matcher,
    confusion,
    clusterer,
    predictor,
    accuracy,
    forecaster,
    delayModelStats,

  kafka.streams.binder:
    brokers: ${settings.kafka-brokers}
    configuration:
      default:
        key.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
        value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
        timestamp.extractor: com.worldremit.util.CustomTimestampExtractor
      schema.registry.url: ${settings.schema-registry}
      commit.interval.ms: 100 # 0
      auto.offset.reset: earliest
      processing.guarantee: at_least_once

    functions:
      matcher.application-id: matcher
      predictor.application-id: predictor
      forecaster.application-id: forecaster
      confusion.application-id: confusion
      clusterer.application-id: clusterer
      accuracy.application-id: accuracy
      delayModelStats.application-id: delay-model-stats

  bindings:

    predictor-in-0.destination: ${topics.measurements-normalized}
    predictor-in-1.destination: ${topics.models}
    predictor-out-0.destination: ${topics.predictions}

    matcher-in-0.destination: ${topics.predictions}
    matcher-in-1.destination: ${topics.measurements-normalized}
    matcher-out-0.destination: ${topics.predictions-vs-actuals}

    clusterer-in-0.destination: ${topics.predictions-vs-actuals}
    clusterer-out-0.destination: ${topics.models}

    confusion-in-0.destination: ${topics.predictions-vs-actuals}
    confusion-in-1.destination: ${topics.global-stats}
    confusion-out-0.destination: ${topics.confusions}

    forecaster-in-0.destination: ${topics.confusions}
    forecaster-out-0.destination: ${topics.forecasts}

    accuracy-in-0.destination: ${topics.confusions}
    accuracy-out-0.destination: ${topics.accuracies}

    delayModelStats-in-0.destination: ${topics.predictions}
    delayModelStats-out-0.destination: ${topics.delay-model-stats}

streams:
  default: &default-stream
    commit-interval-ms: 0

  clusterer: { <<: *default-stream }
  accuracy: { <<: *default-stream }
  delayModelStats: { <<: *default-stream }
