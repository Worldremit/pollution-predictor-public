version: '3'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:6.2.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_HEAP_OPTS: "-Xmx2G -Xms512M"
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 1000  # 0
      KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS: 3000000
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 3
#      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_DELETE_DELAY_MS: 7200000
      KAFKA_LOG_RETENTION_CHECK_INTERVALS_MS: 3000000
      KAFKA_LOG_CLEANER_DELETE_RETENTION_MS: 518400000000 # delete.retention.ms
      KAFKA_LOG_CLEANER_MAX_COMPACTION_LAG_MS: 60000 # max.compaction.lag.ms
      KAFKA_LOG_RETENTION_MS: -1

  schema-registry:
    image: confluentinc/cp-schema-registry:6.2.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LISTENERS: 'http://schema-registry:8081'


  kafkahq:
    hostname: kafkahq
    container_name: kafkahq
    image: tchiotludo/akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "broker:29092"
              schema-registry:
                url: "http://schema-registry:8081"
    ports:
      - "8000:8080"
    links:
      - broker
      - schema-registry

  mongo:
    hostname: mongo
    container_name: mongo
    image: mongo:4.0.19
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

volumes:
  mongo-data: {}
